From bd1f719843be2524c899822d6da4438100f2684c Mon Sep 17 00:00:00 2001
From: Robert Schumacher <roschuma@microsoft.com>
Date: Wed, 21 Feb 2018 17:19:59 -0800
Subject: [PATCH 5/5] use-external-ffmpeg

---
 CMakeLists.txt                  |  6 +-----
 cmake/OpenCVFindLibsVideo.cmake | 19 +++++++++----------
 modules/videoio/CMakeLists.txt  | 40 ----------------------------------------
 3 files changed, 10 insertions(+), 55 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 0156eeb..3eefe0f 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1173,11 +1173,7 @@ if(WITH_1394 OR HAVE_DC1394)
 endif()
 
 if(WITH_FFMPEG OR HAVE_FFMPEG)
-  if(WIN32)
-    status("    FFMPEG:"       HAVE_FFMPEG         THEN "YES (prebuilt binaries)"                  ELSE NO)
-  else()
-    status("    FFMPEG:"       HAVE_FFMPEG         THEN YES ELSE NO)
-  endif()
+  status("    FFMPEG:"         HAVE_FFMPEG                THEN YES                                         ELSE NO)
   status("      avcodec:"      FFMPEG_libavcodec_FOUND    THEN "YES (ver ${FFMPEG_libavcodec_VERSION})"    ELSE NO)
   status("      avformat:"     FFMPEG_libavformat_FOUND   THEN "YES (ver ${FFMPEG_libavformat_VERSION})"   ELSE NO)
   status("      avutil:"       FFMPEG_libavutil_FOUND     THEN "YES (ver ${FFMPEG_libavutil_VERSION})"     ELSE NO)
diff --git a/cmake/OpenCVFindLibsVideo.cmake b/cmake/OpenCVFindLibsVideo.cmake
index f7b427b..99953bc 100644
--- a/cmake/OpenCVFindLibsVideo.cmake
+++ b/cmake/OpenCVFindLibsVideo.cmake
@@ -213,16 +213,18 @@ endif(WITH_XIMEA)
 # --- FFMPEG ---
 ocv_clear_vars(HAVE_FFMPEG)
 if(WITH_FFMPEG)
-  if(WIN32 AND NOT ARM)
-    include("${OpenCV_SOURCE_DIR}/3rdparty/ffmpeg/ffmpeg.cmake")
-    download_win_ffmpeg(FFMPEG_CMAKE_SCRIPT)
-    if(FFMPEG_CMAKE_SCRIPT)
-      set(HAVE_FFMPEG TRUE)
-      include("${FFMPEG_CMAKE_SCRIPT}")
-    endif()
+  if(WIN32)
+    find_package(FFMPEG REQUIRED)
+    message(STATUS "FFMPEG_FOUND: ${FFMPEG_FOUND}")
+    message(STATUS "FFMPEG_INCLUDE_DIRS: ${FFMPEG_INCLUDE_DIRS}")
+    message(STATUS "FFMPEG_LIBRARIES: ${FFMPEG_LIBRARIES}")
+    set(HAVE_FFMPEG TRUE)
   elseif(PKG_CONFIG_FOUND)
     ocv_check_modules(FFMPEG libavcodec libavformat libavutil libswscale)
     ocv_check_modules(FFMPEG_libavresample libavresample)
+  else()
+    message(STATUS "Can't find ffmpeg - 'pkg-config' utility is missing")
+  endif()
     if(FFMPEG_libavresample_FOUND)
       ocv_append_build_options(FFMPEG FFMPEG_libavresample)
     endif()
@@ -243,9 +245,6 @@ if(WITH_FFMPEG)
         ocv_append_build_options(VIDEOIO FFMPEG)
       endif()
     endif()
-  else()
-    message(STATUS "Can't find ffmpeg - 'pkg-config' utility is missing")
-  endif()
 endif(WITH_FFMPEG)
 
 # --- VideoInput/DirectShow ---
diff --git a/modules/videoio/CMakeLists.txt b/modules/videoio/CMakeLists.txt
index 0ded292..1de8bb7 100644
--- a/modules/videoio/CMakeLists.txt
+++ b/modules/videoio/CMakeLists.txt
@@ -225,12 +225,6 @@ if(IOS)
   list(APPEND VIDEOIO_LIBRARIES "-framework Accelerate" "-framework AVFoundation" "-framework CoreGraphics" "-framework CoreImage" "-framework CoreMedia" "-framework CoreVideo" "-framework QuartzCore" "-framework UIKit")
 endif()
 
-if(WIN32)
-  link_directories("${OpenCV_SOURCE_DIR}/3rdparty/lib") # for ffmpeg wrapper only
-  include_directories(AFTER SYSTEM "${OpenCV_SOURCE_DIR}/3rdparty/include") # for directshow in VS2005 and multi-monitor support on MinGW
-  include_directories(AFTER SYSTEM "${OpenCV_SOURCE_DIR}/3rdparty/include/ffmpeg_") # for tests
-endif()
-
 if(UNIX)
   #these variables are set by CHECK_MODULE macro
   foreach(P ${VIDEOIO_INCLUDE_DIRS})
@@ -255,7 +249,6 @@ if(APPLE)
 endif()
 
 if(MSVC)
-  set_target_properties(${the_module} PROPERTIES LINK_FLAGS "/NODEFAULTLIB:atlthunk.lib /NODEFAULTLIB:atlsd.lib /NODEFAULTLIB:libcmt.lib /DEBUG")
   if(DEFINED WINRT AND NOT DEFINED ENABLE_WINRT_MODE_NATIVE)
     set_target_properties(${the_module} PROPERTIES VS_DESKTOP_EXTENSIONS_VERSION "${CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION}")
   endif()
@@ -263,39 +256,6 @@ endif()
 
 ocv_warnings_disable(CMAKE_CXX_FLAGS -Wno-deprecated-declarations)
 
-if(WIN32 AND HAVE_FFMPEG)
-  #copy ffmpeg dll to the output folder
-  if(MSVC64 OR MINGW64)
-    set(FFMPEG_SUFFIX _64)
-  endif()
-
-  set(ffmpeg_dir "${OpenCV_BINARY_DIR}/3rdparty/ffmpeg")
-  set(ffmpeg_bare_name "opencv_ffmpeg${FFMPEG_SUFFIX}.dll")
-  set(ffmpeg_bare_name_ver "opencv_ffmpeg${OPENCV_DLLVERSION}${FFMPEG_SUFFIX}.dll")
-  set(ffmpeg_path "${ffmpeg_dir}/${ffmpeg_bare_name}")
-
-  if(MSVC_IDE)
-    add_custom_command(TARGET ${the_module} POST_BUILD
-                       COMMAND ${CMAKE_COMMAND} -E copy_if_different "${ffmpeg_path}" "${EXECUTABLE_OUTPUT_PATH}/Release/${ffmpeg_bare_name_ver}"
-                       COMMAND ${CMAKE_COMMAND} -E copy_if_different "${ffmpeg_path}" "${EXECUTABLE_OUTPUT_PATH}/Debug/${ffmpeg_bare_name_ver}"
-                       COMMENT "Copying ${ffmpeg_path} to the output directory")
-  elseif(MSVC AND (CMAKE_GENERATOR MATCHES "Visual"))
-    add_custom_command(TARGET ${the_module} POST_BUILD
-                       COMMAND ${CMAKE_COMMAND} -E copy_if_different "${ffmpeg_path}" "${EXECUTABLE_OUTPUT_PATH}/${CMAKE_BUILD_TYPE}/${ffmpeg_bare_name_ver}"
-                       COMMENT "Copying ${ffmpeg_path} to the output directory")
-  else()
-    add_custom_command(TARGET ${the_module} POST_BUILD
-                       COMMAND ${CMAKE_COMMAND} -E copy_if_different "${ffmpeg_path}" "${EXECUTABLE_OUTPUT_PATH}/${ffmpeg_bare_name_ver}"
-                       COMMENT "Copying ${ffmpeg_path} to the output directory")
-  endif()
-
-  install(FILES "${ffmpeg_path}" DESTINATION ${OPENCV_BIN_INSTALL_PATH} COMPONENT libs RENAME "${ffmpeg_bare_name_ver}")
-
-  if(INSTALL_CREATE_DISTRIB)
-    install(FILES "${ffmpeg_dir}/opencv_ffmpeg.dll" DESTINATION "bin/" COMPONENT libs RENAME "opencv_ffmpeg${OPENCV_DLLVERSION}.dll")
-    install(FILES "${ffmpeg_dir}/opencv_ffmpeg_64.dll" DESTINATION "bin/" COMPONENT libs RENAME "opencv_ffmpeg${OPENCV_DLLVERSION}_64.dll")
-  endif()
-endif()
 endmacro()
 
 if(NOT BUILD_opencv_world)
-- 
2.15.1.windows.2

